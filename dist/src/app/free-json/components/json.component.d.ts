import { OnInit, EventEmitter } from '@angular/core';
import { DropEvent, DragEvent } from 'drag-enabled';
import { NodeManager } from '../injectables/node-manager';
import { Node, Reasoning } from '../interfaces/node.interface';
export declare class FreeJsonComponent implements OnInit {
    private manager;
    children: any;
    transformedData: any;
    reasoning: Reasoning[];
    reasoningCodes: string[];
    root: Node;
    save: boolean;
    onpublish: EventEmitter<{}>;
    onchange: EventEmitter<{}>;
    expanded: Boolean;
    constructor(manager: NodeManager);
    private transformedInternalStructureBackToNode(root, parent);
    private transformNodeToInternalStruction(node, parent);
    ngOnInit(): void;
    addNewNode(event: any, node: any): void;
    moveNode(event: any, node: any, moveUp: any): void;
    deleteNode(event: any, node: any): void;
    hasChevronDown(child: any): any;
    hasChevronRight(child: any): boolean;
    dragEnabled(event: DragEvent): any;
    dropEnabled(event: DropEvent): boolean;
    onDragStart(event: any): void;
    onDragEnd(event: DropEvent): void;
    onDrop(event: any): void;
    toGrandParent(event: any, child: any): void;
    getFilteredText(): void;
    toggle(event: any, child: any): void;
    keydown(event: any, item: any): void;
    keymove(event: any, item: any, moveUp: any): void;
    keydelete(event: any, item: any): void;
    keytoGrandParent(event: any, item: any): void;
    keyadd(event: any, item: any): void;
    canAddNode(node: any): boolean;
    changePerformed(event: any): void;
}

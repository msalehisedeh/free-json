import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { NodeType } from './../interfaces/node.interface';
let NodeManager = class NodeManager {
    constructor() {
    }
    generateNodeId() {
        const min = 1;
        const max = 10000;
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }
    getFilteredText() {
        return this.filteredText;
    }
    getNewNode(node) {
        const id = this.generateNodeId();
        return {
            id: id,
            name: 'name',
            value: 'value',
            parent: node.type,
            parentNode: node,
            type: NodeType.literal,
            children: [],
            expanded: false
        };
    }
    setFilteredText(text) {
        this.filteredText = text;
    }
};
NodeManager = tslib_1.__decorate([
    Injectable()
], NodeManager);
export { NodeManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNlZGVoL2ZyZWUtanNvbi8iLCJzb3VyY2VzIjpbInNyYy9hcHAvZnJlZS1qc29uL2luamVjdGFibGVzL25vZGUtbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQVEsUUFBUSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHaEUsSUFBYSxXQUFXLEdBQXhCLE1BQWEsV0FBVztJQUd0QjtJQUNBLENBQUM7SUFFRCxjQUFjO1FBQ1osTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFBO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQzNELENBQUM7SUFFRCxlQUFlO1FBQ2IsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFRCxVQUFVLENBQUMsSUFBVTtRQUNuQixNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDakMsT0FBTztZQUNMLEVBQUUsRUFBRSxFQUFFO1lBQ04sSUFBSSxFQUFFLE1BQU07WUFDWixLQUFLLEVBQUUsT0FBTztZQUNkLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSTtZQUNqQixVQUFVLEVBQUUsSUFBSTtZQUNoQixJQUFJLEVBQUUsUUFBUSxDQUFDLE9BQU87WUFDdEIsUUFBUSxFQUFFLEVBQUU7WUFDWixRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFDO0lBQ0osQ0FBQztJQUVELGVBQWUsQ0FBQyxJQUFJO1FBQ2xCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQzNCLENBQUM7Q0FDRixDQUFBO0FBakNZLFdBQVc7SUFEdkIsVUFBVSxFQUFFO0dBQ0EsV0FBVyxDQWlDdkI7U0FqQ1ksV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IE5vZGUsIE5vZGVUeXBlIH0gZnJvbSAnLi8uLi9pbnRlcmZhY2VzL25vZGUuaW50ZXJmYWNlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE5vZGVNYW5hZ2VyIHtcclxuICBmaWx0ZXJlZFRleHQ6IFN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBnZW5lcmF0ZU5vZGVJZCgpIHtcclxuICAgIGNvbnN0IG1pbiA9IDE7XHJcbiAgICBjb25zdCBtYXggPSAxMDAwMFxyXG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47XHJcbiAgfVxyXG5cclxuICBnZXRGaWx0ZXJlZFRleHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5maWx0ZXJlZFRleHQ7XHJcbiAgfVxyXG5cclxuICBnZXROZXdOb2RlKG5vZGU6IE5vZGUpOiBOb2RlIHtcclxuICAgIGNvbnN0IGlkID0gdGhpcy5nZW5lcmF0ZU5vZGVJZCgpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQ6IGlkLFxyXG4gICAgICBuYW1lOiAnbmFtZScsIFxyXG4gICAgICB2YWx1ZTogJ3ZhbHVlJyxcclxuICAgICAgcGFyZW50OiBub2RlLnR5cGUsXHJcbiAgICAgIHBhcmVudE5vZGU6IG5vZGUsXHJcbiAgICAgIHR5cGU6IE5vZGVUeXBlLmxpdGVyYWwsXHJcbiAgICAgIGNoaWxkcmVuOiBbXSxcclxuICAgICAgZXhwYW5kZWQ6IGZhbHNlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0RmlsdGVyZWRUZXh0KHRleHQpIHtcclxuICAgIHRoaXMuZmlsdGVyZWRUZXh0ID0gdGV4dDtcclxuICB9XHJcbn1cclxuIl19
{"__symbolic":"module","version":4,"metadata":{"FreeJsonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"free-json","template":"<ul>\n  <li  *ngFor=\"let child of transformedData | nodeSearch\"\n        [dragEnabled]=\"dragEnabled.bind(this)\"\n        [medium]=\"child\"\n        (onDragEnd)='onDragEnd($event)'\n        (onDragStart)='onDragStart($event)'>\n    <div [dropEnabled]=\"dropEnabled.bind(this)\" \n        class='tree-node'\n        [id] = \"child.id\"\n        [medium]=\"child\"\n        [class.move]=\"!child.isRoot && (child.name.length || child.value.length)\"\n        (click)=\"toggle($event, child)\"\n        (onDrop)='onDrop($event)'>\n      <i  class='clickable fa fa-chevron-down' \n          tabindex=\"0\"\n          title=\"Collapse {{child.name}}\"\n          *ngIf='hasChevronDown(child)' \n          (keydown)='keydown($event, child)'\n          (click)='toggle($event, child)'></i>\n      <i  class='clickable fa fa-chevron-right' \n          tabindex=\"0\"\n          title=\"Expand {{child.name}}\"\n          *ngIf='hasChevronRight(child)' \n          (keydown)='keydown($event, child)'\n          (click)='toggle($event, child)'></i>\n      <i  class='fa fa-quote-right' \n          arria-hidden=\"true\"\n          *ngIf='child.type === 1'></i>\n          <i  class='fa fa-random' \n          arria-hidden=\"true\"\n          *ngIf='child.type === 2'></i>\n      <i  class='fa no-action fa-chevron-right' \n          arria-hidden=\"true\"\n          *ngIf='child.type === 4 && child.children.length == 0'></i>\n      <json-label \n            (onchange)=\"changePerformed($event)\"\n            [node]=\"child\"></json-label>\n      <span class=\"edit-actions\">\n      <i *ngIf=\"!child.isRoot\"\n          class=\"clickable fa pull-right fa-times\" \n          tabindex=\"0\"\n          title=\"Delete {{child.name}}\"\n          (click)='deleteNode($event, child)' \n          (keydown)='keydelete($event, child)'></i>\n      <i *ngIf=\"transformedData.length > 1 && !child.isRoot\"\n          class=\"clickable fa pull-right fa-angle-double-up\" \n          tabindex=\"0\"\n          title=\"Move up {{child.name}}\"\n          (click)='moveNode($event, child, true)' \n          (keydown)='keymove($event, child, true)'></i>\n      <i *ngIf=\"transformedData.length > 1 && !child.isRoot\"\n          class=\"clickable fa pull-right fa-angle-double-down\" \n          tabindex=\"0\"\n          title=\"Move down {{child.name}}\"\n          (click)='moveNode($event, child, false)' \n          (keydown)='keymove($event, child, false)'></i>\n      <i *ngIf=\"canAddNode(child)\"\n          class=\"clickable fa pull-right fa-plus\" \n          tabindex=\"0\"\n          title=\"Add New Child\"\n          (keydown)='keyadd($event, child)'\n          (click)='addNewNode($event, child)'></i>\n      <i *ngIf=\"!child.isRoot && child.parentNode.parentNode && (child.name.length || child.value.length)\"\n          class=\"clickable fa pull-right fa-angle-double-left\" \n          tabindex=\"0\"\n          title=\"Move to {{child.parentNode.parentNode.name}}\"\n          (click)='toGrandParent($event, child)' \n          (keydown)='keytoGrandParent($event, child)'></i>\n      </span>\n    </div>\n    <div *ngIf=\"child.expanded\">\n      <free-json \n            (onchange)=\"changePerformed($event)\"\n            [reasoning]=\"reasoning\"\n            [reasoningCodes]=\"reasoningCodes\"\n            [transformedData]='child.children'></free-json>\n    </div>\n  </li>\n</ul>\n\n","styles":["ul{list-style:none;min-width:400px}.tree-node{padding:0;border:1px solid #eef1f4;background:#f7f9ff;color:#7c9eb2;margin:3px 0;text-transform:capitalize;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.tree-node i{width:15px;height:15px;margin:10px 3px}.tree-node.move{cursor:move}.clickable{cursor:pointer}.no-action{color:transparent}.edit-actions{border-left:1px solid #eef1f4;float:right}.drag-over{background-color:#7c9eb2;color:#fff}.fa{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.fa-plus-square{color:green}.fa-minus-circle{color:red}"]}]}],"members":{"transformedData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":3},"arguments":["transformedData"]}]}],"reasoning":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":3},"arguments":["reasoning"]}]}],"reasoningCodes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":104,"character":3},"arguments":["reasoningCodes"]}]}],"root":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":107,"character":3}}]}],"save":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":133,"character":3}}]}],"onpublish":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":144,"character":3},"arguments":["onpublish"]}]}],"onchange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":147,"character":3},"arguments":["onchange"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"transformedInternalStructureBackToNode":[{"__symbolic":"method"}],"transformNodeToInternalStruction":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"addNewNode":[{"__symbolic":"method"}],"moveNode":[{"__symbolic":"method"}],"deleteNode":[{"__symbolic":"method"}],"hasChevronDown":[{"__symbolic":"method"}],"hasChevronRight":[{"__symbolic":"method"}],"dragEnabled":[{"__symbolic":"method"}],"dropEnabled":[{"__symbolic":"method"}],"onDragStart":[{"__symbolic":"method"}],"onDragEnd":[{"__symbolic":"method"}],"onDrop":[{"__symbolic":"method"}],"toGrandParent":[{"__symbolic":"method"}],"getFilteredText":[{"__symbolic":"method"}],"toggle":[{"__symbolic":"method"}],"keydown":[{"__symbolic":"method"}],"keymove":[{"__symbolic":"method"}],"keydelete":[{"__symbolic":"method"}],"keytoGrandParent":[{"__symbolic":"method"}],"keyadd":[{"__symbolic":"method"}],"canAddNode":[{"__symbolic":"method"}],"changePerformed":[{"__symbolic":"method"}]}},"Node":{"__symbolic":"interface"},"NodeType":{"literal":1,"pair":2,"json":3,"array":4},"ActionType":{"add":1,"remove":2,"move":3,"modified":4},"Reasoning":{"__symbolic":"interface"},"FreeJsonModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":11,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":13,"character":4},{"__symbolic":"reference","module":"drag-enabled","name":"DragDropModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":15,"character":4}],"declarations":[{"__symbolic":"reference","name":"FreeJsonComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"exports":[{"__symbolic":"reference","name":"FreeJsonComponent"}],"entryComponents":[],"providers":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵa"}],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":32,"character":12}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"generateNodeId":[{"__symbolic":"method"}],"getFilteredText":[{"__symbolic":"method"}],"getNewNode":[{"__symbolic":"method"}],"setFilteredText":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"json-label","template":"<span *ngIf=\"editName && node.name !=='Root' && node.value !=='Object'\">\n    <input #nameEditor\n        type='text' \n        id=\"editName\"\n        placeholder=\"Name\"\n        (blur)=\"editName = false; onchange.emit();\" \n        [(ngModel)]='node.name'>\n</span>\n<span *ngIf='!editName && node.type !== 1'\n    class='locked name' \n    tabindex='0' \n    (keydown)='nameLabelKeydown($event)'\n    (click)=\"clickName($event)\"\n    [innerHTML]=\"node.name.length ? node.name : '&nbsp;'\">\n</span>\n<span *ngIf=\"editValue && node.name !=='Root' && node.value !=='Object'\">\n    <input #valueEditor\n        type='text' \n        id=\"editValue\"\n        placeholder=\"Value\"\n        (blur)=\"editValue = false; onchange.emit();\" \n        [(ngModel)]='node.value'>\n</span>\n<span *ngIf='!editValue && (node.type === 2 || node.type === 1) && node.value!=null'\n    class='locked' \n    [class.name]=\"node.type === 4\"\n    tabindex='0' \n    (keydown)='valueLabelKeydown($event)'\n    (click)=\"clickValue($event)\"\n    [innerHTML]=\"node.value.length ? node.value : '&nbsp;'\">\n</span>\n","styles":[":host{margin:10px 0}span.locked{display:inline-block;cursor:pointer;min-width:30px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}span.locked.name{font-weight:700;color:#000}span input{cursor:beam}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":45,"character":32}]}],"nameEditor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":49,"character":3},"arguments":["nameEditor"]}]}],"valueEditor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":52,"character":3},"arguments":["valueEditor"]}]}],"node":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":3}}]}],"onchange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":3},"arguments":["onchange"]}]}],"nameLabelKeydown":[{"__symbolic":"method"}],"valueLabelKeydown":[{"__symbolic":"method"}],"clickName":[{"__symbolic":"method"}],"clickValue":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":3,"character":1},"arguments":[{"name":"nodeSearch","pure":false}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"isBlank":[{"__symbolic":"method"}],"transform":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"json-search-field","template":"<input type='text' [(ngModel)]='val' (ngModelChange)='filter(val)'>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"filter":[{"__symbolic":"method"}]}}},"origins":{"FreeJsonComponent":"./src/app/free-json/components/json.component","Node":"./src/app/free-json/interfaces/node.interface","NodeType":"./src/app/free-json/interfaces/node.interface","ActionType":"./src/app/free-json/interfaces/node.interface","Reasoning":"./src/app/free-json/interfaces/node.interface","FreeJsonModule":"./src/app/free-json/free-json.module","ɵa":"./src/app/free-json/injectables/node-manager","ɵb":"./src/app/free-json/components/json-label.component","ɵc":"./src/app/free-json/pipes/json-search","ɵd":"./src/app/free-json/components/json-search-field.component"},"importAs":"free-json"}